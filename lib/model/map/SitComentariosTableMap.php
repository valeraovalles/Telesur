<?php


/**
 * This class defines the structure of the 'sit_comentarios' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Fri Sep 14 15:26:12 2012
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class SitComentariosTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.SitComentariosTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('sit_comentarios');
		$this->setPhpName('SitComentarios');
		$this->setClassname('SitComentarios');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		$this->setPrimaryKeyMethodInfo('sit_comentarios_id_comentario_seq');
		// columns
		$this->addPrimaryKey('ID_COMENTARIO', 'IdComentario', 'INTEGER', true, null, null);
		$this->addForeignKey('ID_USUARIO', 'IdUsuario', 'INTEGER', 'sf_guard_user_profile', 'USER_ID', true, null, null);
		$this->addForeignKey('ID_TICKET', 'IdTicket', 'INTEGER', 'sit_tickets', 'ID_TICKET', true, null, null);
		$this->addColumn('COMENTARIO', 'Comentario', 'VARCHAR', true, 500, null);
		$this->addColumn('FECHA', 'Fecha', 'DATE', true, null, null);
		$this->addColumn('HORA', 'Hora', 'TIME', true, null, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('SfGuardUserProfile', 'SfGuardUserProfile', RelationMap::MANY_TO_ONE, array('id_usuario' => 'user_id', ), null, null);
    $this->addRelation('SitTickets', 'SitTickets', RelationMap::MANY_TO_ONE, array('id_ticket' => 'id_ticket', ), null, null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // SitComentariosTableMap
